name: Start a stopped ec2 instance, then copy over a docker compose file to be ran on the instance

on:
  push:   
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build: 

    runs-on: ubuntu-latest

    steps: 
    - name: Start AWS EC2
      run: |
        aws ec2 start-instances --instance-ids i-0cb23d3507b57abb0
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION: us-east-2

    - name: Wait for EC2 instance to start
      run: aws ec2 wait instance-running  --instance-ids i-0cb23d3507b57abb0
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION: us-east-2

    - name: Obtain instance public ip addr
      run: |
         echo "INSTANCE_IP=$(aws --region us-east-2 \
         ec2 describe-instances \
         --filters \
         "Name=instance-id,Values=i-0cb23d3507b57abb0" \
         --query 'Reservations[*].Instances[*].[PublicIpAddress]' \
         --output text)" >> $GITHUB_ENV
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION: us-east-2

    - uses: actions/checkout@master
    - name: copy file via ssh password
      uses: appleboy/scp-action@master
      with:
        host: $INSTANCE_IP
        username: ${{ secrets.SSH_USER }}
        key: ${{ secrets.PASSWORD }}
        source: "docker-compose.yml"
        target: "/home/ubuntu/"

    - name: executing remote ssh commands using password
      uses: appleboy/ssh-action@master
      with:
        host: $INSTANCE_IP
        username: ${{ secrets.SSH_USER }}
        key: ${{ secrets.PASSWORD }}
        script: docker-compose up -d
    
    # - name: Obtain instance public IP and copy over compose file 
    #   uses: garygrossgarten/github-action-scp@release
    #   with:
    #     local: automate-compose/docker-compose.yml
    #     remote: /home/ubuntu/docker-compose.yml
    #     host: $TEST
    #     username: ${{ secrets.SSH_USER }}
    #     privateKey: ${{ secrets.PASSWORD }}
    #     verbose: true 

    #   env:
    #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
    #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    #     TEST: $(aws --region us-east-2 \
    #      ec2 describe-instances \
    #      --filters \
    #      "Name=instance-id,Values=i-0cb23d3507b57abb0" \
    #      --query 'Reservations[*].Instances[*].[PublicIpAddress]' \
    #      --output text)
        
      